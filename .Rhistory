dat_watershed_ds2 <- names(dat_watershed_ds) %>%
map_dfc(~dat_watershed_ds %>% select(all_of(.x)) %>%
separate(.x, into = paste0(.x, c("_n", "_mean", "_sd", "_min", "_max", "_cv")),
sep = "_")) %>%
select(-c(Watershed_mean, Watershed_sd, Watershed_min, Watershed_max)) %>%
rename(Watershed = Watershed_n)
dat_watershed_ds2 <- names(dat_watershed_ds) %>%
map_dfc(~dat_watershed_ds %>% select(all_of(.x)) %>%
separate(.x, into = paste0(.x, c("_n", "_mean", "_sd", "_min", "_max", "_cv")),
sep = "_")) %>%
select(-c(Watershed_mean, Watershed_sd, Watershed_min, Watershed_max, watershed_cv)) %>%
rename(Watershed = Watershed_n)
dat_watershed_ds2 <- names(dat_watershed_ds) %>%
map_dfc(~dat_watershed_ds %>% select(all_of(.x)) %>%
separate(.x, into = paste0(.x, c("_n", "_mean", "_sd", "_min", "_max", "_cv")),
sep = "_"))
View(dat_watershed_ds2)
View(dat_watershed_ds)
View(dat_watershed_ds2)
dat_watershed_ds2 <- names(dat_watershed_ds) %>%
map_dfc(~dat_watershed_ds %>% select(all_of(.x)) %>%
separate(.x, into = paste0(.x, c("_n", "_mean", "_sd", "_min", "_max", "_cv")),
sep = "_")) %>%
select(-c(Watershed_mean, Watershed_sd, Watershed_min, Watershed_max, Watershed_cv)) %>%
rename(Watershed = Watershed_n)
write_csv(dat_watershed_ds2, paste0(here, "/figs/tables/C_tab_watershed_ds.csv"))
#Descriptive statistics for comparison by watershed
dat_watershed_ds3 <- dat_watershed_ds2 %>%
pivot_longer(-Watershed) %>%
pivot_wider(names_from = Watershed) %>%
mutate(across(-name, as.numeric)) %>%
# select(contains("_n")) %>%
rowwise() %>%
mutate(min = min(across(-name)),
max = max(across(-name)))
View(dat_watershed_ds3)
write_csv(dat_watershed_ds3, paste0(here, "/figs/tables/D_tab_watershed_ds2.csv"))
View(dat_watershed_ds2)
#plots
t <- dat_watershed_ds2 %>%
select(Watershed, contains("_cv"))
View(t)
#plots
t <- dat_watershed_ds2 %>%
select(Watershed, contains("_cv")) %>%
pivot_longer(-Watershed)
ggplot(t) +
geom_bar(y=value, x = name )
ggplot(t) +
geom_bar(mapping=aes(y=value, x = name))
ggplot() +
geom_bar(data = t, mapping=aes(y=value, x = name))
ggplot() +
geom_point(data = t, mapping=aes(y=value, x = name))
ggplot() +
geom_point(data = t, mapping=aes(y=value, x = name)) %>%
facet_wrap(~Watershed)
ggplot() +
geom_point(data = t, mapping=aes(y=value, x = name)) %>%
facet_wrap(~factor(Watershed))
#plots
t <- dat_watershed_ds2 %>%
select(Watershed, contains("_cv")) %>%
pivot_longer(-Watershed) %>%
convert_as_factor(Watershed)
ggplot() +
geom_point(data = t, mapping=aes(y=value, x = name)) %>%
facet_wrap(~factor(Watershed))
ggplot() +
geom_point(data = t, mapping=aes(y=value, x = name)) %>%
facet_wrap(~Watershed)
ggplot() +
geom_point(data = t, mapping=aes(y=value, x = name)) %>%
facet_wrap(~vars(Watershed))
ggplot() +
geom_point(data = t, mapping=aes(y=value, x = name)) %>%
facet_wrap(~vars("Watershed"))
ggplot() +
geom_point(data = t, mapping=aes(y=value, x = name)) %>%
facet_wrap(~Watershed)
ggplot(t) +
geom_point(mapping=aes(y=value, x = name)) %>%
facet_wrap(~Watershed)
ggplot(t) +
geom_point(mapping=aes(y=value, x = name))
ggplot(t) +
geom_col(mapping=aes(y=value, x = name)) %>%
facet_wrap(~Watershed)
ggplot(t) +
geom_col(mapping=aes(y=value, x = name))
ggplot(t) +
geom_col(mapping=aes(y=value, x = name)) %>%
facet_wrap(vars(Watershed))
#plots
t <- dat_watershed_ds2 %>%
select(Watershed, contains("_cv")) %>%
pivot_longer(-Watershed) %>%
convert_as_factor(Watershed)
ggplot(t) +
geom_col(mapping=aes(y=value, x = name))
ggplot(t) +
geom_col(mapping=aes(y=value, x = Watershed)) %>%
facet_wrap(vars(name))
ggplot(t) +
geom_col(mapping=aes(y=value, x = Watershed))
View(dat)
plot(dat$normalized.transformations ~ dat$DamDensWs)
dat %>%
ggplot() +
geom_boxplot(mapping = aes(y=DamDensWs, x = Site))
dat %>%
ggplot() +
geom_boxplot(mapping = aes(y=DamDensWs, x = Watershed))
dat %>%
ggplot() +
geom_point(mapping = aes(x=DamDensWs, y= normalized.transformations,
color = Watershed))
dat %>%
ggplot() +
geom_point(mapping = aes(x=DamDensWs, y= normalized.transformations,
color = Watershed)) +
facet_wrap(vars(Watershed))
dat %>%
ggplot() +
geom_point(mapping = aes(x=DamDensWs, y= normalized.transformations,
color = Watershed)) +
facet_wrap(vars(Watershed), scales = "free")
dat %>%
ggplot() +
geom_point(mapping = aes(x = tt_hr, #x=DamDensWs,
y= normalized.transformations,
color = Watershed)) +
facet_wrap(vars(Watershed), scales = "free")
dat %>%
ggplot() +
geom_point(mapping = aes(x = AI.Mod, #x=DamDensWs,
y= DBE,
color = Watershed)) +
facet_wrap(vars(Watershed), scales = "free")
dat %>%
ggplot() +
geom_point(mapping = aes(x = AI.Mod.mean, #x=DamDensWs,
y= DBE.mean,
color = Watershed)) +
facet_wrap(vars(Watershed), scales = "free")
dat %>%
ggplot() +
geom_point(mapping = aes(x = AI_Mod.mean, #x=DamDensWs,
y= DBE.mean,
color = Watershed)) +
facet_wrap(vars(Watershed), scales = "free")
#0.0 Setup----
library(here)
here <- here()
library(tidyverse)
# library(ggpubr)
# library(ggpmisc)
library(naniar)
library(rstatix)
#1.0 Input and Rearrange Data----
dat <- readRDS(paste0(here, "/output/dat_wide.Rds")) %>%
convert_as_factor(vars= c("Watershed", "season_tb", "Site", "streamorde"))
install.packages("naniar")
install.packages("rstatix")
#1.0 Input and Rearrange Data----
dat <- readRDS(paste0(here, "/output/dat_wide.Rds")) %>%
convert_as_factor(vars= c("Watershed", "season_tb", "Site", "streamorde"))
#0.0 Setup----
library(here)
here <- here()
library(tidyverse)
# library(ggpubr)
# library(ggpmisc)
library(naniar)
library(rstatix)
#1.0 Input and Rearrange Data----
dat <- readRDS(paste0(here, "/output/dat_wide.Rds")) %>%
convert_as_factor(vars= c("Watershed", "season_tb", "Site", "streamorde"))
glimpse(dat)
#check missing data by variable
dat %>% gg_miss_var()
glimpse(dat)
#Select Variables
dat2 <- dat %>%
select(Site, Date, Watershed, WsAreaSqKm, tt_hr, streamorde,
season_tb,
q_daily_mm,
PctDecid2019Ws, PctConif2019Ws,
lulc_evenness,
DOC_mgL,
TN_mgL,
number.of.peaks,
total.transformations, normalized.transformations,
AI_Mod.mean)
expl_vars <- dat2 %>%
select(WsAreaSqKm, tt_hr, lulc_evenness, PctDecid2019Ws, PctConif2019Ws) %>%
colnames()
dep_vars <- dat2 %>%
select(DOC_mgL, number.of.peaks, AI_Mod.mean,
# total.transformations,
normalized.transformations) %>%
colnames()
#pivot long for DOM metrics representing richness, diversity, and composition (AI)
#AND pivot long for all explanatory and dependent variables
dat3 <- dat2 %>%
pivot_longer(cols = all_of(dep_vars),
names_to= "dep_names", values_to = "dep_values") %>%
pivot_longer(cols = all_of(expl_vars),
names_to= "expl_names", values_to = "expl_values") %>%
mutate(across(where(is.character), as.factor),
dep_names = fct_relevel(dep_names, "DOC_mgL", "number.of.peaks",
"AI_Mod.mean",
# "total.transformations",
"normalized.transformations"),
expl_names = fct_relevel(expl_names, "WsAreaSqKm", "tt_hr",
"lulc_evenness", "PctConif2019Ws", "PctDecid2019Ws"))
#pivot longer only all dependent variables
dat4 <- dat2 %>%
pivot_longer(cols = all_of(dep_vars),
names_to= "dep_names", values_to = "dep_values") %>%
mutate(across(where(is.character), as.factor),
dep_names = fct_relevel(dep_names, "DOC_mgL", "number.of.peaks",
"AI_Mod.mean",
# "total.transformations",
"normalized.transformations"),
Watershed = fct_relevel(Watershed, "Yakima", "Deschutes",
"Willamette", "Gunnison", "Connecticut"))
#Dependent variable mean and standard deviation by site
dat5 <- dat4 %>%
group_by(Site, dep_names) %>%
mutate(dep_mean = mean(dep_values, na.rm = TRUE),
dep_sd = sd(dep_values, na.rm=TRUE),
dep_n = n()) %>%
ungroup() %>%
distinct(Site, dep_names, .keep_all = TRUE) %>%
select(-dep_values) %>%
pivot_longer(cols = all_of(expl_vars),
names_to= "expl_names", values_to = "expl_values") %>%
mutate(across(where(is.character), as.factor),
expl_names = fct_relevel(expl_names, "WsAreaSqKm", "tt_hr",
"lulc_evenness", "PctConif2019Ws", "PctDecid2019Ws"))
#2.0 Plots Setup ----
theme_set(theme_bw()+
theme(strip.background = element_rect(color="black", fill="white")))
labels <- c(`Yakima` = "Yakima",
`Deschutes` = "Deschutes",
`Willamette` = "Willamette",
`Gunnison` = "Gunnison",
`Connecticut` = "Connecticut",
`WsAreaSqKm` = "Area (sq. km)",
`tt_hr` = "WRT (h)",
`lulc_evenness` = "LULC Evenness",
`PctConif2019Ws` = "Conif. (%)",
`PctDecid2019Ws` = "Decid. (%)",
`DOC_mgL` = "DOC (mg/L)",
`number.of.peaks` = "Num. Peaks",
`AI_Mod.mean` = "AI",
# `total.transformations` = "Tot. Trans.",
`normalized.transformations` = "Norm. Trans.")
dat2 %>% #filter(Watershed == "Willamette") %>%
ggplot()+
geom_point(mapping=aes(x=tt_hr, y = Site))
#4.0 Correlations ----
## Pearson correlation, all variables, by watershed, explanatory vars log transformed ----
lm_log_mods_watershed <- dat3 %>%
mutate(expl_values2 = case_when(expl_names == "PctDecid2019Ws" &
expl_values == 0 ~ 0.01,
TRUE ~ expl_values),
expl_values_log = log10(expl_values2)) %>%
group_by(Watershed, expl_names, dep_names) %>%
nest() %>%
mutate(model = map(data,
.f = ~lm(dep_values ~ expl_values_log,
data = .)),
glance = map(.x = model, .f = ~broom::glance(.x)),
preds = map(model, broom::augment),
RMSE = map_dbl(preds, .f = ~sqrt(mean(.x$.resid^2))),
r = map_dbl(.x = data, .f = ~cor(.x$dep_values, .x$expl_values_log, use="complete.obs")),
p_cor = map_dbl(.x = data, .f = ~cor.test(.x$dep_values, .x$expl_values_log,
alternative = "two.sided",
method = "pearson")$p.value)) %>%
unnest(glance)
## Pearson correlation, all variables, by watershed, explanatory vars log transformed, mean dep vars ----
lm_log_mean_watershed <- dat5 %>%
mutate(expl_values2 = case_when(expl_names == "PctDecid2019Ws" &
expl_values == 0 ~ 0.01,
TRUE ~ expl_values),
expl_values_log = log10(expl_values2)) %>%
group_by(Watershed, expl_names, dep_names) %>%
nest() %>%
mutate(model = map(data,
.f = ~lm(dep_mean ~ expl_values_log,
data = .)),
glance = map(.x = model, .f = ~broom::glance(.x)),
preds = map(model, broom::augment),
r = map_dbl(.x = data, .f = ~cor(.x$dep_mean, .x$expl_values_log, use="complete.obs")),
RMSE = map_dbl(preds, .f = ~sqrt(mean(.x$.resid^2))),
p_cor = map_dbl(.x = data, .f = ~cor.test(.x$dep_mean, .x$expl_values_log,
alternative = "two.sided",
method = "pearson")$p.value)) %>%
unnest(glance)
View(lm_log_mean_watershed)
summary(lm_log_mean_watershed$model[1])
summary(lm_log_mean_watershed$model[[1]])
## Pearson correlation, all variables, by watershed, explanatory vars log transformed, mean dep vars ----
lm_log_mean_watershed <- dat5 %>%
mutate(expl_values2 = case_when(expl_names == "PctDecid2019Ws" &
expl_values == 0 ~ 0.01,
TRUE ~ expl_values),
expl_values_log = log10(expl_values2)) %>%
group_by(Watershed, expl_names, dep_names) %>%
nest() %>%
mutate(model = map(data,
.f = ~lm(dep_mean ~ expl_values_log,
data = .)),
glance = map(.x = model, .f = ~broom::glance(.x)),
tidy = map(.x = model, .f = ~broom::tidy(.x)),
preds = map(model, broom::augment),
r = map_dbl(.x = data, .f = ~cor(.x$dep_mean, .x$expl_values_log, use="complete.obs")),
RMSE = map_dbl(preds, .f = ~sqrt(mean(.x$.resid^2))),
p_cor = map_dbl(.x = data, .f = ~cor.test(.x$dep_mean, .x$expl_values_log,
alternative = "two.sided",
method = "pearson")$p.value)) %>%
unnest(glance)
View(lm_log_mean_watershed[[18]][[1]])
log(1.01)
## Pearson correlation, all variables, by watershed, explanatory vars log transformed, mean dep vars ----
lm_log_mean_watershed <- dat5 %>%
mutate(expl_values2 = case_when(expl_names == "PctDecid2019Ws" &
expl_values == 0 ~ 0.01,
TRUE ~ expl_values),
expl_values_log = log10(expl_values2)) %>%
group_by(Watershed, expl_names, dep_names) %>%
nest() %>%
mutate(model = map(data,
.f = ~lm(dep_mean ~ expl_values_log,
data = .)),
glance = map(.x = model, .f = ~broom::glance(.x)),
preds = map(model, broom::augment),
r = map_dbl(.x = data, .f = ~cor(.x$dep_mean, .x$expl_values_log, use="complete.obs")),
RMSE = map_dbl(preds, .f = ~sqrt(mean(.x$.resid^2))),
p_cor = map_dbl(.x = data, .f = ~cor.test(.x$dep_mean, .x$expl_values_log,
alternative = "two.sided",
method = "pearson")$p.value)) %>%
unnest(glance)
lm_log_mean_watershed_tidy <- lm_log_mean_watershed %>%
mutate(tidy = map(.x = model, .f = ~broom::tidy(.x)))
View(lm_log_mean_watershed_tidy)
lm_log_mean_watershed_tidy <- lm_log_mean_watershed %>%
mutate(tidy = map(.x = model, .f = ~broom::tidy(.x))) %>%
select(Watershed, dep_names, expl_names, tidy)
View(lm_log_mean_watershed_tidy)
lm_log_mean_watershed_tidy <- lm_log_mean_watershed %>%
mutate(tidy = map(.x = model, .f = ~broom::tidy(.x))) %>%
select(Watershed, dep_names, expl_names, tidy, r, RMSE, p_cor)
View(lm_log_mean_watershed_tidy)
lm_log_mean_watershed_tidy <- lm_log_mean_watershed %>%
mutate(tidy = map(.x = model, .f = ~broom::tidy(.x))) %>%
select(Watershed, dep_names, expl_names, tidy, r, RMSE, p_cor) %>%
unnest(glance)
lm_log_mean_watershed_tidy <- lm_log_mean_watershed %>%
mutate(tidy = map(.x = model, .f = ~broom::tidy(.x))) %>%
select(Watershed, dep_names, expl_names, tidy, r, RMSE, p_cor) %>%
unnest(tidy)
0.5/100
lm_log_mean_watershed_tidy <- lm_log_mean_watershed %>%
mutate(tidy = map(.x = model, .f = ~broom::tidy(.x))) %>%
select(Watershed, dep_names, expl_names, tidy, r, RMSE, p_cor) %>%
unnest(tidy) %>%
filter(dep_names == "normalized.transformations",
expl_names == "WsAreaSqKm")
lm_log_mean_watershed_tidy <- lm_log_mean_watershed %>%
mutate(tidy = map(.x = model, .f = ~broom::tidy(.x))) %>%
select(Watershed, dep_names, expl_names, tidy, r, RMSE, p_cor) %>%
unnest(tidy) %>%
filter(dep_names == "normalized.transformations",
expl_names == "WsAreaSqKm",
term != "(Intercept)")
log(1.01)
log(1.1, base= 10)
log10(1.1)
lm_log_mean_watershed_tidy <- lm_log_mean_watershed %>%
mutate(tidy = map(.x = model, .f = ~broom::tidy(.x))) %>%
select(Watershed, dep_names, expl_names, tidy, r, RMSE, p_cor) %>%
unnest(tidy) %>%
filter(dep_names == "normalized.transformations",
expl_names == "WsAreaSqKm",
term != "(Intercept)") %>%
mutate(increase10 = term * log10(1.1))
lm_log_mean_watershed_tidy <- lm_log_mean_watershed %>%
mutate(tidy = map(.x = model, .f = ~broom::tidy(.x))) %>%
select(Watershed, dep_names, expl_names, tidy, r, RMSE, p_cor) %>%
unnest(tidy) %>%
filter(dep_names == "normalized.transformations",
expl_names == "WsAreaSqKm",
term != "(Intercept)") %>%
mutate(increase10 = Estimate * log10(1.1))
lm_log_mean_watershed_tidy <- lm_log_mean_watershed %>%
mutate(tidy = map(.x = model, .f = ~broom::tidy(.x))) %>%
select(Watershed, dep_names, expl_names, tidy, r, RMSE, p_cor) %>%
unnest(tidy) %>%
filter(dep_names == "normalized.transformations",
expl_names == "WsAreaSqKm",
term != "(Intercept)") %>%
mutate(increase10 = estimate * log10(1.1))
log10(1)
1*100
1*1.1
lm_log_mean_watershed_tidy <- lm_log_mean_watershed %>%
mutate(tidy = map(.x = model, .f = ~broom::tidy(.x))) %>%
select(Watershed, dep_names, expl_names, tidy, r, RMSE, p_cor) %>%
unnest(tidy) %>%
filter(dep_names == "normalized.transformations",
expl_names == "WsAreaSqKm",
term != "(Intercept)") %>%
mutate(increase2 = estimate * log10(2))
lm_log_mean_watershed_tidy <- lm_log_mean_watershed %>%
mutate(tidy = map(.x = model, .f = ~broom::tidy(.x))) %>%
select(Watershed, dep_names, expl_names, tidy, r, RMSE, p_cor) %>%
unnest(tidy) %>%
filter(dep_names == "normalized.transformations",
expl_names == "WsAreaSqKm",
term != "(Intercept)") %>%
mutate(increase2 = estimate * log10(2),
slope_incr = increase2 - estimate)
lm_log_mean_watershed_tidy <- lm_log_mean_watershed %>%
mutate(tidy = map(.x = model, .f = ~broom::tidy(.x))) %>%
select(Watershed, dep_names, expl_names, tidy, r, RMSE, p_cor) %>%
unnest(tidy) %>%
filter(dep_names == "normalized.transformations",
expl_names == "WsAreaSqKm",
term != "(Intercept)") %>%
mutate(increase2 = estimate * log10(2),
slope_incr = ((increase2 - estimate)/estimate)*100)
log10(2) - log10(1)
log10(1)
log10(2)
lm_log_mean_watershed_tidy <- lm_log_mean_watershed %>%
mutate(tidy = map(.x = model, .f = ~broom::tidy(.x))) %>%
select(Watershed, dep_names, expl_names, tidy, r, RMSE, p_cor) %>%
unnest(tidy) %>%
filter(dep_names == "normalized.transformations",
expl_names == "WsAreaSqKm",
term != "(Intercept)") %>%
mutate(increase = estimate * log10(1.5),
slope_incr = ((increase - estimate)/estimate)*100)
lm_log_mean_watershed_tidy <- lm_log_mean_watershed %>%
mutate(tidy = map(.x = model, .f = ~broom::tidy(.x))) %>%
select(Watershed, dep_names, expl_names, tidy, r, RMSE, p_cor) %>%
unnest(tidy) %>%
filter(dep_names == "normalized.transformations",
expl_names == "WsAreaSqKm",
term != "(Intercept)") %>%
mutate(slope_incr = estimate * log10(1.5),
pc_slope_incr = ((slope_incr - estimate)/estimate)*100)
lm_log_mean_watershed_tidy <- lm_log_mean_watershed %>%
mutate(tidy = map(.x = model, .f = ~broom::tidy(.x))) %>%
select(Watershed, dep_names, expl_names, tidy, r, RMSE, p_cor) %>%
unnest(tidy) %>%
filter(dep_names == "normalized.transformations",
expl_names == "WsAreaSqKm",
term != "(Intercept)") %>%
mutate(slope_incr = estimate * log10(2),
pc_slope_incr = ((slope_incr - estimate)/estimate)*100)
lm_log_mean_watershed_tidy <- lm_log_mean_watershed %>%
mutate(tidy = map(.x = model, .f = ~broom::tidy(.x))) %>%
select(Watershed, dep_names, expl_names, tidy, r, RMSE, p_cor) %>%
unnest(tidy) %>%
filter(dep_names == "normalized.transformations",
expl_names == "WsAreaSqKm",
term != "(Intercept)") %>%
mutate(dep_incr = estimate * log10(2),
pc_dep_incr = (dep_incr/estimate)*100)
lm_log_mean_watershed_tidy <- lm_log_mean_watershed %>%
mutate(tidy = map(.x = model, .f = ~broom::tidy(.x))) %>%
select(Watershed, dep_names, expl_names, tidy, r, RMSE, p_cor) %>%
unnest(tidy) %>%
filter(dep_names == "normalized.transformations",
expl_names == "WsAreaSqKm",
term != "(Intercept)") %>%
mutate(dep_incr = estimate * log10(10),
pc_dep_incr = (dep_incr/estimate)*100)
log10(10)
lm_log_mean_watershed_tidy <- lm_log_mean_watershed %>%
mutate(tidy = map(.x = model, .f = ~broom::tidy(.x))) %>%
select(Watershed, dep_names, expl_names, tidy, r, RMSE, p_cor) %>%
unnest(tidy) %>%
filter(dep_names == "normalized.transformations",
expl_names == "WsAreaSqKm",
term != "(Intercept)") %>%
mutate(dep_incr = estimate * log10(100),
pc_dep_incr = (dep_incr/estimate)*100)
lm_log_mean_watershed_tidy <- lm_log_mean_watershed %>%
mutate(tidy = map(.x = model, .f = ~broom::tidy(.x))) %>%
select(Watershed, dep_names, expl_names, tidy, r, RMSE, p_cor) %>%
unnest(tidy) %>%
filter(dep_names == "normalized.transformations",
expl_names == "WsAreaSqKm",
term != "(Intercept)") %>%
mutate(dep_incr = estimate * log10(100),
pc_dep_incr = (dep_incr/estimate)*100)
0.59*2
lm_log_mean_watershed_slopes <- lm_log_mean_watershed %>%
mutate(tidy = map(.x = model, .f = ~broom::tidy(.x))) %>%
select(Watershed, dep_names, expl_names, tidy, r, RMSE, p_cor) %>%
unnest(tidy) %>%
filter(dep_names == "normalized.transformations",
expl_names %in% c("WsAreaSqKm", "tt_hr"),
term != "(Intercept)") %>%
mutate(dep_incr = estimate * log10(100),
pc_dep_incr = (dep_incr/estimate)*100)
View(lm_log_mean_watershed_slopes)
